<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Testplan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread-Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10000</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1567623430000</longProp>
        <longProp name="ThreadGroup.end_time">1567623430000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Product-IDS" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">/tmp/product-ids.csv</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.group</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">PRODUCTID</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT /product" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:&quot;${PRODUCTID}&quot;,&quot;names&quot;:[{&quot;lang&quot;:&quot;ae&quot;,&quot;name&quot;:&quot;ywn7uaubHacxhskrjtiRgftyfnE&quot;},{&quot;lang&quot;:&quot;af&quot;,&quot;name&quot;:&quot;o5s2tiJnrkctobzeouqq6cvLCnmbrdoXguunsynxfFen&quot;},{&quot;lang&quot;:&quot;al&quot;,&quot;name&quot;:&quot;rgXywztd3kdemYhvshndjehe9yRibc19ic&quot;},{&quot;lang&quot;:&quot;bd&quot;,&quot;name&quot;:&quot;prmz4Nll9twOahnnQz79cblebKRuanjjcwykvk6debuup5nIzB&quot;},{&quot;lang&quot;:&quot;br&quot;,&quot;name&quot;:&quot;8flw1ijoledXbuj0spCjss18qvvf0ohnw6apWkesz5oGur6eidlnghsalRIbrFoqdpAvzzfkh5p&quot;},{&quot;lang&quot;:&quot;br&quot;,&quot;name&quot;:&quot;bjnZvaatrUxruzwpw0f85kez&quot;},{&quot;lang&quot;:&quot;by&quot;,&quot;name&quot;:&quot;2pjmwFC7mlgpguozc5vg&quot;},{&quot;lang&quot;:&quot;by&quot;,&quot;name&quot;:&quot;mh&quot;},{&quot;lang&quot;:&quot;bz&quot;,&quot;name&quot;:&quot;rfaymU8k8phpsziAezmwdy7azxzqgWidlnkkktwh7vnmuiIcerphwAz&quot;},{&quot;lang&quot;:&quot;ch&quot;,&quot;name&quot;:&quot;cqeppvtuxwjpkKz9yqgfk3vcwbgf6twgr2zHhyq&quot;},{&quot;lang&quot;:&quot;cn&quot;,&quot;name&quot;:&quot;nzjpbiccow1sgogqfchmmw7wDmwjoi2hniszpnqavzqvdbcoEQckxc8aah1nilllwpi4g0utzq3eyoaalnw0i4fbCu&quot;},{&quot;lang&quot;:&quot;cu&quot;,&quot;name&quot;:&quot;egbbprfl75qehbnd1bvhJvycrdmiewagqfftptjdDjumloryekMSub9sfafnyteocbweq&quot;},{&quot;lang&quot;:&quot;de&quot;,&quot;name&quot;:&quot;wxeJzxuqsnv1unzx3bxxaha81tu4u1idx8o5qnqDy6osn&quot;},{&quot;lang&quot;:&quot;do&quot;,&quot;name&quot;:&quot;llfScwcppbpffpdiewvamrabfjqTqmz5huihAgzlis2ulzxfVGzbonoxHsz95hx998xsycxpLrN&quot;},{&quot;lang&quot;:&quot;eg&quot;,&quot;name&quot;:&quot;2mjzaoqw9s0zgrev5sndqfgluilwvwdx2lo5exq1ekaecu&quot;},{&quot;lang&quot;:&quot;fi&quot;,&quot;name&quot;:&quot;cuowvop9ljy4qjdtvqwgcitxfe2c3oqpu0ijGdvpaqzVxkqb8hgrqCYhPhs&quot;},{&quot;lang&quot;:&quot;fi&quot;,&quot;name&quot;:&quot;qhgiwjob&quot;},{&quot;lang&quot;:&quot;ga&quot;,&quot;name&quot;:&quot;qKxzentyfku7FbxflN09mP5x3yltwbinkojqoj1rGxh1c6glejwk4abc1oqzU0ue&quot;},{&quot;lang&quot;:&quot;gl&quot;,&quot;name&quot;:&quot;tsgwwQm3zpbfkrzksjyrgjMupde2vc&quot;},{&quot;lang&quot;:&quot;gm&quot;,&quot;name&quot;:&quot;lnriejwwndwayMaxcFunad2xwvhgibvlWBejmnkhgevyoqbyzocmdLbH3zuvrqvgibpzba6ZNPftli&quot;},{&quot;lang&quot;:&quot;gs&quot;,&quot;name&quot;:&quot;yhbJvscwgwm5xzftlLl22phgwyqo6w7od63quxwmwhebcZfQaqgIzsnyfbKpbwphzgsW7jrfe&quot;},{&quot;lang&quot;:&quot;hm&quot;,&quot;name&quot;:&quot;tackdzvlnmly6wxxYnv0vdtkbuybaurmool1lX1lmobcdonZ5sfiuhoH7F&quot;},{&quot;lang&quot;:&quot;id&quot;,&quot;name&quot;:&quot;bzjd6eGhyjxy7eshdXiaePvxfjmumzbgyuqQxHzkhnqqgqc5dakfS45&quot;},{&quot;lang&quot;:&quot;in&quot;,&quot;name&quot;:&quot;meTeIigeRojbczhUfa9be8rmuyvpgyzmblydvwescqlvxqinfrt&quot;},{&quot;lang&quot;:&quot;is&quot;,&quot;name&quot;:&quot;IlYNokBkpvv0Yex92ncyld2kdlrPhkuzxrqqvzfycesghowul3awvtr0i6ufIMcfh4XisbBx5pmevvIhhYqheique5wuwjzh0e&quot;},{&quot;lang&quot;:&quot;ke&quot;,&quot;name&quot;:&quot;lt6pmxcvuPNyufbQsrta2jcauv8Ndhknez7&quot;},{&quot;lang&quot;:&quot;kp&quot;,&quot;name&quot;:&quot;5qntpvmbn6q&quot;},{&quot;lang&quot;:&quot;lb&quot;,&quot;name&quot;:&quot;7qyXxz2vqb8ofzdujv1vdtkXErhgh2xFmksPgwMvSPhfarvrkgyixu6ao1WtkaNkgNdtlrKZszpzzCaufdiy128kxVnfbjg&quot;},{&quot;lang&quot;:&quot;li&quot;,&quot;name&quot;:&quot;gcqmbhOownjgqaihqdoitcdouywhongjasjihaw&quot;},{&quot;lang&quot;:&quot;lk&quot;,&quot;name&quot;:&quot;ts8gqcMlYkwky9Ij3zyaMba&quot;},{&quot;lang&quot;:&quot;ly&quot;,&quot;name&quot;:&quot;dUaatmYgymCmcgfn3frubu5xzszjwx5LUv4vughYoQjdlsJr&quot;},{&quot;lang&quot;:&quot;md&quot;,&quot;name&quot;:&quot;01fjcWzdsmkv0omngosupgzIwe3lzrytbdb0dks8ltachEy7ftlvtrykp38A3ilH2oui7jygchyosroibjs&quot;},{&quot;lang&quot;:&quot;mf&quot;,&quot;name&quot;:&quot;oIeaoxsfqfiejzyAtp8fxeq1btgaDYlhcnzjfd7bfkjffdolyv9gro7y0x&quot;},{&quot;lang&quot;:&quot;mo&quot;,&quot;name&quot;:&quot;zxnwvyh7tbglg8qtpycMpi5ewhrvwjajqmh&quot;},{&quot;lang&quot;:&quot;mz&quot;,&quot;name&quot;:&quot;ojqnsspusomugqhxudrdlGkIYtoQznm2kaojpuBh&quot;},{&quot;lang&quot;:&quot;ne&quot;,&quot;name&quot;:&quot;1kdfzpxdLewleipqn&quot;},{&quot;lang&quot;:&quot;nl&quot;,&quot;name&quot;:&quot;xyubutJqqijhgesWsa3pnS7sypihhynfwih0zupPpywwekhqiDbXseaigmrbaYu8zlTegaubmhytqt&quot;},{&quot;lang&quot;:&quot;nu&quot;,&quot;name&quot;:&quot;ozjegpeJgSha9usovkfiy2eybHpkyvmz27rjpnvFwvvfynlZo3uzl19opUxoblncjOgfi&quot;},{&quot;lang&quot;:&quot;sa&quot;,&quot;name&quot;:&quot;4heurfj9zVwvgseitns1mbyu&quot;},{&quot;lang&quot;:&quot;sk&quot;,&quot;name&quot;:&quot;65yoWg5cvezwkzm3donj8w3BtmsnamltwXoHshthur8fWzgmbShGxehkLZfelrm&quot;},{&quot;lang&quot;:&quot;th&quot;,&quot;name&quot;:&quot;ndffhrifx0db3jfqmrl0fvixpu3osumncjyGhzSlfylajxmunlrwvbdoHiahyjcbbdemncHTzad6fpRi1zjrrya&quot;},{&quot;lang&quot;:&quot;tl&quot;,&quot;name&quot;:&quot;15iujkz2x9nyqpcaaNlcrzyWlNbxykoxLtipblyXnjzsmrSmjyditguqtyrde6prpzm3bf2dn4p4aqmfzRpqdbw&quot;},{&quot;lang&quot;:&quot;tm&quot;,&quot;name&quot;:&quot;uxbrrjrbgsbocrmQvxDiysinfzrlzCdhgvDz1cwnmaIbuxvqbajjfqzuu7rknbfutccZ1Bewoejqrfub&quot;},{&quot;lang&quot;:&quot;tw&quot;,&quot;name&quot;:&quot;aajhSnpmwLvbib1nbasushclfCalykbicn&quot;},{&quot;lang&quot;:&quot;vc&quot;,&quot;name&quot;:&quot;9qybeusc0dxkxwfeli9qzhth&quot;},{&quot;lang&quot;:&quot;ve&quot;,&quot;name&quot;:&quot;Z0sfczrljq&quot;}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">49152</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/product/${PRODUCTID}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
